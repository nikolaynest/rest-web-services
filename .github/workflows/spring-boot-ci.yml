name: Spring Boot CI

on:
  push:
    branches:
      - development   # Specify the branch where the action should be triggered
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest  # Define the runner environment

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 (or whichever version you're using)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'  # Required, choose between 'temurin', 'zulu', 'adopt', etc.
          java-version: '17'

      # Step 3: Cache Maven dependencies for faster builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Step 4: Build and run tests
      - name: Build with Maven and run tests
        run: mvn clean install

      # Step 5: Upload the built JAR file as an artifact
      - name: Upload JAR file
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: target/*.jar
